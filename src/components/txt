import React, { useState } from 'react';
import * as XLSX from 'xlsx';

const Mahasiswa = () => {
    const [nim, setNim] = useState('');
    const [data, setData] = useState([]);
    const [error, setError] = useState('');

    const readExcel = async (file) => {
        return new Promise((resolve, reject) => {
            const fileReader = new FileReader();
            fileReader.readAsArrayBuffer(file);

            fileReader.onload = (e) => {
                const bufferArray = e.target.result;
                const workbook = XLSX.read(bufferArray, { type: 'buffer' });
                const worksheetName = workbook.SheetNames[0];
                const worksheet = workbook.Sheets[worksheetName];
                const jsonData = XLSX.utils.sheet_to_json(worksheet);
                resolve(jsonData);
            };

            fileReader.onerror = (error) => reject(error);
        });
    };

    const handleSearch = async () => {
        const trimmedNim = nim.trim();
        if (!trimmedNim) {
            setError('NIM tidak boleh kosong');
            return;
        }

        try {
            const response = await fetch('/data.xlsx');
            const fileBlob = await response.blob();
            const excelData = await readExcel(fileBlob);

            const filteredData = excelData.filter((row) => row.Nim === trimmedNim);

            if (filteredData.length === 0) {
                setError('Data tidak ditemukan untuk NIM tersebut.');
                setData([]);
            } else {
                setError('');
                setData(filteredData);
            }
        } catch (err) {
            setError('Gagal membaca file Excel.');
            console.error(err);
        }
    };

    const handleKeyDown = (event) => {
        if (event.key === 'Enter') {
            handleSearch();
        }
    };

    return (
        <div className="flex flex-col justify-center items-center min-h-screen bg-blue-100 p-6 font-inter">
            <h1 className="text-3xl font-bold text-slate-800 mb-6">Rekomendasi Dosen dan Tugas Akhir Alumni</h1>

            {/* Input NIM */}
            <div className="flex items-center mb-6 w-full max-w-md">
                <input
                    type="text"
                    placeholder="Masukkan NIM"
                    value={nim}
                    onChange={(e) => setNim(e.target.value)}
                    onKeyDown={handleKeyDown}
                    className="w-full p-3 border border-gray-300 rounded-l-lg focus:outline-none focus:ring-2 focus:ring-indigo-500"
                />
                <button
                    onClick={handleSearch}
                    className="p-3 bg-indigo-600 text-white rounded-r-lg hover:bg-indigo-500 transition-all"
                >
                    Search
                </button>
            </div>

            {/* Pesan Error */}
            {error && <p className="text-red-400 font-semibold mb-4">{error}</p>}

            {/* Tampilkan Data */}
            {data.length > 0 && (
                <div className="w-full max-w-3xl bg-white shadow-lg rounded-lg overflow-hidden">
                    <h2 className="text-xl font-bold bg-indigo-200 text-indigo-800 p-4 border-b">Hasil Rekomendasi 1</h2>
                    <table className="w-full border-collapse">
                        <thead>
                            <tr className="bg-indigo-50 text-indigo-800">
                                <th className="p-3 text-left border-b">Nama</th>
                                <th className="p-3 text-left border-b">Title</th>
                                <th className="p-3 text-left border-b">Mata Kuliah</th>
                            </tr>
                        </thead>
                        <tbody>
                            {data.map((row, index) => {
                                const titles = row.Title.split(',').map((title) => title.trim());
                                const silabus = row.Silabus_Mata_Kuliah.split(',').map((s) => s.trim());

                                return (
                                    <tr key={index} className="border-b">
                                        <td className="p-3">{row.Nama}</td>
                                        <td className="p-3">
                                            <table className="w-full border-collapse">
                                                <tbody>
                                                    {titles.map((title, idx) => (
                                                        <tr key={idx} className={idx % 2 === 0 ? "bg-gray-100" : "bg-white"}>
                                                            <td className="p-2">{title}</td>
                                                        </tr>
                                                    ))}
                                                </tbody>
                                            </table>
                                        </td>
                                        <td className="p-3">
                                            <table className="w-full border-collapse">
                                                <tbody>
                                                    {silabus.map((s, idx) => (
                                                        <tr key={idx} className={idx % 2 === 0 ? "bg-gray-100" : "bg-white"}>
                                                            <td className="p-2">{s}</td>
                                                        </tr>
                                                    ))}
                                                </tbody>
                                            </table>
                                        </td>
                                    </tr>
                                );
                            })}
                        </tbody>
                    </table>
                </div>
            )}
        </div>
    );
};

export default Mahasiswa;
